/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as Cohere from "../../../index";
/**
 * StreamedChatResponse is returned in streaming mode (specified with `stream=True` in the request).
 */
export type V2ChatStreamResponse = Cohere.V2ChatStreamResponse.MessageStart | Cohere.V2ChatStreamResponse.ContentStart | Cohere.V2ChatStreamResponse.ContentDelta | Cohere.V2ChatStreamResponse.ContentEnd | Cohere.V2ChatStreamResponse.ToolPlanDelta | Cohere.V2ChatStreamResponse.ToolCallStart | Cohere.V2ChatStreamResponse.ToolCallDelta | Cohere.V2ChatStreamResponse.ToolCallEnd | Cohere.V2ChatStreamResponse.CitationStart | Cohere.V2ChatStreamResponse.CitationEnd | Cohere.V2ChatStreamResponse.MessageEnd | Cohere.V2ChatStreamResponse.Debug;
export declare namespace V2ChatStreamResponse {
    interface MessageStart extends Cohere.ChatMessageStartEvent {
        type: "message-start";
    }
    interface ContentStart extends Cohere.ChatContentStartEvent {
        type: "content-start";
    }
    interface ContentDelta extends Cohere.ChatContentDeltaEvent {
        type: "content-delta";
    }
    interface ContentEnd extends Cohere.ChatContentEndEvent {
        type: "content-end";
    }
    interface ToolPlanDelta extends Cohere.ChatToolPlanDeltaEvent {
        type: "tool-plan-delta";
    }
    interface ToolCallStart extends Cohere.ChatToolCallStartEvent {
        type: "tool-call-start";
    }
    interface ToolCallDelta extends Cohere.ChatToolCallDeltaEvent {
        type: "tool-call-delta";
    }
    interface ToolCallEnd extends Cohere.ChatToolCallEndEvent {
        type: "tool-call-end";
    }
    interface CitationStart extends Cohere.CitationStartEvent {
        type: "citation-start";
    }
    interface CitationEnd extends Cohere.CitationEndEvent {
        type: "citation-end";
    }
    interface MessageEnd extends Cohere.ChatMessageEndEvent {
        type: "message-end";
    }
    interface Debug extends Cohere.ChatDebugEvent {
        type: "debug";
    }
}
